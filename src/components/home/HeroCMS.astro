---
import { getEntry } from 'astro:content';
import Button from '../common/Button.astro';

// Get hero content from CMS
const heroData = await getEntry('hero', 'hero');
const { title, subtitle, description, backgroundImage, services, ctaButton, trustIndicators } = heroData.data;

// Convert services array to JSON string for the data attribute
const servicesJson = JSON.stringify(services.map(s => s.name));
---

<section class="hero">
  <div class="hero__background">
    <img src={backgroundImage} alt={`${title} Professional Equipment`} class="hero__background-image" />
    <div class="hero__overlay"></div>
  </div>
  
  <div class="container">
    <div class="hero__content">
      <!-- Badge -->
      <div class="hero__badge animate-fade-in" style="animation-delay: 0.1s">
        <svg class="hero__badge-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M12 2a10 10 0 0 1 10 10c0 5.52-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2z"/>
          <path d="M8 12l4-4m0 0l4 4m-4-4v8"/>
        </svg>
        <span>{subtitle}</span>
      </div>

      <!-- Main Title -->
      <h1 class="hero__title animate-fade-in" style="animation-delay: 0.2s">
        {title}
      </h1>
      
      <!-- Animated Services -->
      <div class="hero__animated-services animate-fade-in" style="animation-delay: 0.3s">
        <span class="hero__service-cycler">
          <span class="hero__service-text" data-services={servicesJson}>{services[0]?.name || 'Services'}</span>
        </span>
        <span class="hero__specialists">Specialists</span>
      </div>

      <!-- Service Icons -->
      <div class="hero__service-icons animate-fade-in" style="animation-delay: 0.4s">
        {services.slice(0, 3).map((service, index) => (
          <div class="hero__service-item">
            <div class="hero__service-icon">
              {service.name === 'Snow Removal' && (
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 2L8 7h8l-4-5zM8 7L4 12h16L16 7M4 12l4 5h8l4-5M8 17l4 5 4-5"/>
                </svg>
              )}
              {service.name === 'Landscaping' && (
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 21h18M3 7v1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7h-18z"/>
                </svg>
              )}
              {service.name === 'Excavation' && (
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 21h18M5 21V7l8-4v18M19 21V11l-6-3M9 9v.01M9 13v.01M9 17v.01"/>
                </svg>
              )}
            </div>
            <span>{service.name}</span>
          </div>
        ))}
      </div>
      
      <!-- Description -->
      <p class="hero__description animate-fade-in" style="animation-delay: 0.5s">
        {description}
      </p>
      
      <!-- CTA Buttons -->
      <div class="hero__actions animate-fade-in" style="animation-delay: 0.6s">
        <div class="hero__button-wrapper">
          <Button href={`tel:${ctaButton.phone}`} variant="primary" size="large" class="hero__button-primary">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
            </svg>
            {ctaButton.text}
            <svg class="hero__button-arrow" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </Button>
        </div>
      </div>

      <!-- Trust Indicators -->
      <div class="hero__trust animate-fade-in" style="animation-delay: 0.7s">
        {trustIndicators.map((indicator, index) => (
          <>
            <div class="hero__trust-item">
              <span class="hero__trust-number">{indicator.number}</span>
              <span class="hero__trust-text">{indicator.text}</span>
            </div>
            {index < trustIndicators.length - 1 && <div class="hero__trust-separator"></div>}
          </>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  .hero {
    position: relative;
    overflow: hidden;
    min-height: 100vh;
    display: flex;
    align-items: flex-start;
    padding-top: calc(var(--header-height) + var(--space-8));
  }
  
  /* Background */
  .hero__background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -2;
  }
  
  .hero__background-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  
  .hero__overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(46, 90, 135, 0.95) 0%,
      rgba(74, 144, 226, 0.85) 100%
    );
    z-index: 1;
  }
  
  /* Content Section */
  .hero__content {
    position: relative;
    z-index: 1;
    text-align: center;
    padding: var(--space-4) 0 var(--space-16);
    max-width: 1024px;
    margin: 0 auto;
  }
  
  /* Badge */
  .hero__badge {
    display: inline-flex;
    align-items: center;
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius-full);
    background-color: rgba(255, 255, 255, 0.15);
    border: 1px solid rgba(255, 255, 255, 0.3);
    margin-bottom: var(--space-4);
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--white);
    backdrop-filter: blur(10px);
  }
  
  .hero__badge-icon {
    margin-right: var(--space-2);
    color: var(--white);
  }
  
  /* Title */
  .hero__title {
    font-size: clamp(3rem, 8vw, 5rem);
    font-weight: 800;
    margin-bottom: var(--space-3);
    color: var(--white);
    line-height: 1.1;
    letter-spacing: -0.02em;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* Animated Services */
  .hero__animated-services {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    margin-bottom: var(--space-6);
    color: var(--white);
    font-weight: 300;
  }
  
  .hero__service-cycler {
    position: relative;
    display: inline-block;
    margin-right: var(--space-2);
  }
  
  .hero__service-text {
    color: var(--white);
    font-weight: 600;
    display: inline-block;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .hero__specialists {
    color: rgba(255, 255, 255, 0.9);
  }
  
  /* Service Icons */
  .hero__service-icons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-8);
    margin-bottom: var(--space-6);
  }
  
  .hero__service-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-2);
  }
  
  .hero__service-icon {
    padding: var(--space-3);
    border-radius: var(--radius-full);
    background-color: rgba(255, 255, 255, 0.15);
    color: var(--white);
    backdrop-filter: blur(10px);
  }
  
  .hero__service-item span {
    font-size: var(--text-sm);
    color: rgba(255, 255, 255, 0.9);
  }
  
  /* Description */
  .hero__description {
    font-size: var(--text-xl);
    line-height: 1.7;
    margin-bottom: var(--space-8);
    color: rgba(255, 255, 255, 0.95);
    max-width: 768px;
    margin-left: auto;
    margin-right: auto;
  }
  
  /* Actions */
  .hero__actions {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    margin-bottom: var(--space-8);
  }
  
  .hero__button-wrapper {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: calc(var(--radius-lg) + 2px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    padding: 2px;
  }
  
  .hero__button-primary :global(.button) {
    position: relative;
    overflow: hidden;
    transition: all var(--transition-base);
    background-color: var(--warning);
    color: var(--white);
    border-color: var(--warning);
    font-weight: 600;
    padding: var(--space-4) var(--space-8);
  }
  
  .hero__button-primary:hover :global(.button) {
    background-color: var(--warning-light);
    border-color: var(--warning-light);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(255, 107, 53, 0.3);
  }
  
  .hero__button-arrow {
    margin-left: var(--space-2);
    transition: transform var(--transition-base);
  }
  
  .hero__button-primary:hover .hero__button-arrow {
    transform: translateX(4px);
  }
  
  /* Trust Indicators */
  .hero__trust {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: var(--space-6);
    font-size: var(--text-sm);
    color: var(--white);
  }
  
  .hero__trust-item {
    display: flex;
    align-items: center;
    gap: var(--space-1);
  }
  
  .hero__trust-number {
    font-weight: 600;
    color: var(--white);
  }
  
  .hero__trust-text {
    color: rgba(255, 255, 255, 0.9);
  }
  
  .hero__trust-separator {
    width: 4px;
    height: 4px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: var(--radius-full);
  }
  
  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      filter: blur(12px);
      transform: translateY(12px);
    }
    to {
      opacity: 1;
      filter: blur(0);
      transform: translateY(0);
    }
  }
  
  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 1s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .hero__content {
      padding: var(--space-2) 0 var(--space-12);
    }
    
    .hero__title {
      font-size: clamp(2rem, 10vw, 3rem);
    }
    
    .hero__animated-services {
      font-size: clamp(1.25rem, 5vw, 1.75rem);
    }
    
    .hero__service-icons {
      gap: var(--space-4);
    }
    
    .hero__description {
      font-size: var(--text-lg);
      margin-bottom: var(--space-8);
    }
    
    .hero__actions {
      flex-direction: column;
      width: 100%;
    }
    
    .hero__button-wrapper,
    .hero__actions :global(.button) {
      width: 100%;
      max-width: 300px;
    }
    
    .hero__trust {
      flex-direction: column;
      gap: var(--space-3);
    }
    
    .hero__trust-separator {
      display: none;
    }
  }
  
  @media (max-width: 640px) {
    .hero__service-icons {
      flex-direction: column;
      gap: var(--space-3);
    }
    
    .hero {
      min-height: 80vh;
    }
  }
</style>

<script>
  // Animated text cycling
  const serviceText = document.querySelector('.hero__service-text');
  if (serviceText) {
    const services = JSON.parse(serviceText.dataset.services || '[]');
    let currentIndex = 0;
    
    setInterval(() => {
      // Add exit animation
      serviceText.style.opacity = '0';
      serviceText.style.filter = 'blur(8px)';
      serviceText.style.transform = 'translateY(10px)';
      
      setTimeout(() => {
        // Change text
        currentIndex = (currentIndex + 1) % services.length;
        serviceText.textContent = services[currentIndex];
        
        // Add enter animation
        serviceText.style.opacity = '1';
        serviceText.style.filter = 'blur(0)';
        serviceText.style.transform = 'translateY(0)';
      }, 300);
    }, 2500);
    
    // Add transition styles
    serviceText.style.transition = 'all 0.3s ease-in-out';
  }
</script>