---
import { getEntry } from 'astro:content';

const homepage = await getEntry('homepage', 'content');
const { equipment } = homepage.data;

const icons = {
  'Plow Trucks': 'M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z',
  'Bobcats': 'M7 2v11h3v9l7-12h-4l4-8z',
  'Wheel Loaders': 'M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z',
  'Tri-Axle Dumps': 'M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z'
};
---

<section class="py-20 bg-primary-900 relative overflow-hidden">
  <!-- Animated background -->
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-gradient-to-br from-primary-900 via-primary-800 to-secondary-900 opacity-90"></div>
    <div class="absolute inset-0" style="background-image: url('/images/equipment/equipment-hero-600x300.jpg'); background-size: cover; background-position: center; opacity: 0.1;"></div>
  </div>

  <div class="container mx-auto px-4 relative z-10">
    <!-- Header -->
    <div class="text-center mb-16 animate-fade-in">
      <h2 class="text-4xl md:text-5xl font-bold text-white mb-4">
        {equipment.title}
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto">
        {equipment.subtitle}
      </p>
    </div>

    <!-- Stats grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16">
      {equipment.stats.map((stat, index) => (
        <div 
          class="relative group animate-slide-up"
          style={`animation-delay: ${index * 100}ms`}
        >
          <div class="absolute inset-0 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-2xl blur-lg group-hover:blur-xl transition-all duration-300 opacity-75"></div>
          <div class="relative bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl p-8 text-center hover:bg-white/20 transition-all duration-300">
            <!-- Icon -->
            <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d={icons[stat.label] || icons['Plow Trucks']} />
              </svg>
            </div>
            
            <!-- Number -->
            <div class="text-5xl font-bold text-white mb-2 counter" data-target={stat.number}>
              0
            </div>
            
            <!-- Label -->
            <div class="text-gray-300 font-medium">
              {stat.label}
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Additional info -->
    <div class="grid md:grid-cols-3 gap-8">
      <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-6 animate-fade-in">
        <div class="flex items-center space-x-4 mb-4">
          <div class="w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-white">Always Ready</h3>
        </div>
        <p class="text-gray-300">Our fleet is maintained to the highest standards, ensuring reliability when you need it most.</p>
      </div>

      <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-6 animate-fade-in" style="animation-delay: 100ms">
        <div class="flex items-center space-x-4 mb-4">
          <div class="w-12 h-12 bg-secondary-500 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-white">Fast Response</h3>
        </div>
        <p class="text-gray-300">With our extensive fleet, we can mobilize quickly to handle any size project or emergency.</p>
      </div>

      <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-6 animate-fade-in" style="animation-delay: 200ms">
        <div class="flex items-center space-x-4 mb-4">
          <div class="w-12 h-12 bg-green-500 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-white">Experienced Operators</h3>
        </div>
        <p class="text-gray-300">Our skilled operators have decades of combined experience handling all types of equipment and conditions.</p>
      </div>
    </div>
  </div>
</section>

<script>
  // Animate counters
  const counters = document.querySelectorAll('.counter');
  const speed = 200;

  const animateCounter = (counter) => {
    const target = +(counter.getAttribute('data-target') || 0);
    const increment = target / speed;
    let current = 0;

    const updateCounter = () => {
      current += increment;
      if (current < target) {
        counter.textContent = Math.ceil(current).toString();
        requestAnimationFrame(updateCounter);
      } else {
        counter.textContent = target.toString();
      }
    };

    updateCounter();
  };

  // Intersection Observer for counter animation
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateCounter(entry.target);
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.5 });

  counters.forEach(counter => observer.observe(counter));
</script>
