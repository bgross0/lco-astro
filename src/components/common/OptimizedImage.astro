---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  class?: string;
  loading?: 'eager' | 'lazy';
  widths?: number[];
  sizes?: string;
  quality?: number;
  format?: 'webp' | 'avif' | 'auto';
  aspectRatio?: string;
}

const {
  src,
  alt,
  class: className = '',
  loading = 'lazy',
  widths = [400, 800, 1200, 1600],
  sizes = '100vw',
  quality = 80,
  format = 'auto',
  aspectRatio
} = Astro.props;

// Handle both CMS paths (/images/...) and relative paths
const imageSrc = src.startsWith('/images/')
  ? src.replace('/images/', '/src/assets/images/')
  : src;

// For now, use a picture element with srcset for better browser support
// This will work with existing images while we migrate to Astro Image
---

<picture class={className}>
  {/* WebP version */}
  <source
    type="image/webp"
    srcset={widths.map(w => `${src}?width=${w}&format=webp ${w}w`).join(', ')}
    sizes={sizes}
  />

  {/* AVIF version for modern browsers */}
  <source
    type="image/avif"
    srcset={widths.map(w => `${src}?width=${w}&format=avif ${w}w`).join(', ')}
    sizes={sizes}
  />

  {/* Fallback to original format */}
  <img
    src={`${src}?width=${widths[1]}&quality=${quality}`}
    alt={alt}
    loading={loading}
    class={className}
    width={widths[1]}
    height={aspectRatio ? Math.round(widths[1] / parseFloat(aspectRatio)) : undefined}
    decoding="async"
  />
</picture>

<style>
  picture {
    display: contents;
  }

  img {
    max-width: 100%;
    height: auto;
  }
</style>