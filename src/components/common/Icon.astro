---
import {
  PhArrowLeft,
  PhArrowRight,
  PhBulldozer,
  PhCheck,
  PhCheckCircle,
  PhClock,
  PhEnvelope,
  PhFileText,
  PhGoogleLogo,
  PhHouse,
  PhMapPin,
  PhPhone,
  PhShieldCheck,
  PhSnowflake,
  PhStar,
  PhTree,
  PhUserCheck,
  PhBuildings,
  PhTruck,
  PhChartLine,
  PhDrop,
  PhShield,
  PhBuilding,
  PhClipboard,
  PhCube,
  PhLightning,
  PhRoadHorizon,
} from 'phosphor-icons-astro';

export interface Props {
  name: string;
  size?: number;
  weight?: 'thin' | 'light' | 'regular' | 'bold' | 'fill' | 'duotone';
  color?: string;
  class?: string;
}

const { name, size = 24, weight = 'regular', color = 'currentColor', class: className = '' } = Astro.props;

// Map icon names to components
const iconMap: Record<string, any> = {
  'arrow-left': PhArrowLeft,
  'arrow-right': PhArrowRight,
  'bulldozer': PhBulldozer,
  'check': PhCheck,
  'check-circle': PhCheckCircle,
  'clock': PhClock,
  'envelope': PhEnvelope,
  'file-text': PhFileText,
  'google': PhGoogleLogo,
  'home': PhHouse,
  'house': PhHouse,
  'map-pin': PhMapPin,
  'phone': PhPhone,
  'shield-check': PhShieldCheck,
  'snowflake': PhSnowflake,
  'star': PhStar,
  'tree': PhTree,
  'user-check': PhUserCheck,
  'buildings': PhBuildings,
  'building': PhBuilding,
  'truck': PhTruck,
  'chart': PhChartLine,
  'droplet': PhDrop,
  'salt': PhDrop, // Using drop for salt
  'shield': PhShield,
  'clipboard': PhClipboard,
  'cube': PhCube,
  'lightning': PhLightning,
  'road': PhRoadHorizon,
};

const IconComponent = iconMap[name];

if (!IconComponent) {
  console.error(`Icon "${name}" not found in icon map`);
}
---

{IconComponent && (
  <IconComponent
    size={size}
    weight={weight}
    color={color}
    class={className}
    aria-hidden="true"
  />
)}
