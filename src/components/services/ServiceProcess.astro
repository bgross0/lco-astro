---
import Icon from '../common/Icon.astro';

export interface Props {
  process: Array<{
    step: number;
    title: string;
    description: string;
  }>;
}

const { process } = Astro.props;
---

<section class="service-process">
  <div class="container">
    <div class="process-header">
      <h2>How We Work</h2>
      <p>Our simple, transparent process ensures you get the best service</p>
    </div>
    
    <div class="process-timeline">
      {process.map((item, index) => (
        <div class="process-step" style={`animation-delay: ${index * 0.2}s`}>
          <div class="step-connector"></div>
          <div class="step-marker">
            <span class="step-number">{item.step}</span>
          </div>
          <div class="step-content">
            <h3>{item.title}</h3>
            <p>{item.description}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .service-process {
    padding: var(--space-16) 0;
    background: var(--neutral-light);
  }
  
  .process-header {
    text-align: center;
    margin-bottom: var(--space-12);
  }
  
  .process-header h2 {
    color: var(--secondary);
    font-size: var(--text-3xl);
    margin-bottom: var(--space-3);
  }
  
  .process-header p {
    color: var(--neutral-dark);
    font-size: var(--text-lg);
  }
  
  .process-timeline {
    max-width: 800px;
    margin: 0 auto;
    position: relative;
  }
  
  .process-timeline::before {
    content: '';
    position: absolute;
    left: 40px;
    top: 40px;
    bottom: 40px;
    width: 2px;
    background: linear-gradient(180deg, var(--primary-light), var(--accent-light));
    opacity: 0.3;
  }
  
  .process-step {
    display: flex;
    align-items: flex-start;
    gap: var(--space-6);
    margin-bottom: var(--space-8);
    position: relative;
    animation: slideInLeft 0.8s ease-out forwards;
    opacity: 0;
  }
  
  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  .process-step:last-child {
    margin-bottom: 0;
  }
  
  .step-connector {
    position: absolute;
    left: 40px;
    top: 40px;
    bottom: -40px;
    width: 2px;
    background: var(--primary);
    opacity: 0;
    animation: growDown 0.5s ease-out forwards;
    animation-delay: inherit;
  }
  
  @keyframes growDown {
    to {
      opacity: 1;
    }
  }
  
  .process-step:last-child .step-connector {
    display: none;
  }
  
  .step-marker {
    position: relative;
    width: 80px;
    height: 80px;
    border-radius: var(--radius-full);
    background: var(--white);
    border: 3px solid var(--primary);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    z-index: 2;
    transition: all 0.3s ease;
  }
  
  .process-step:hover .step-marker {
    transform: scale(1.1);
    background: var(--primary);
    box-shadow: var(--shadow-lg);
  }
  
  .step-number {
    font-size: var(--text-2xl);
    font-weight: var(--font-bold);
    color: var(--primary);
    transition: color 0.3s ease;
  }
  
  .process-step:hover .step-number {
    color: var(--white);
  }
  
  .step-content {
    flex: 1;
    background: var(--white);
    padding: var(--space-6);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    transition: all 0.3s ease;
  }
  
  .process-step:hover .step-content {
    transform: translateX(10px);
    box-shadow: var(--shadow-xl);
  }
  
  .step-content h3 {
    color: var(--primary);
    font-size: var(--text-xl);
    margin-bottom: var(--space-3);
    font-weight: var(--font-semibold);
  }
  
  .step-content p {
    color: var(--neutral-dark);
    line-height: 1.6;
  }
  
  @media (max-width: 768px) {
    .process-timeline::before {
      left: 20px;
    }
    
    .step-connector {
      left: 20px;
    }
    
    .step-marker {
      width: 40px;
      height: 40px;
    }
    
    .step-number {
      font-size: var(--text-lg);
    }
    
    .process-step {
      gap: var(--space-4);
    }
    
    .step-content {
      padding: var(--space-4);
    }
    
    .process-step:hover .step-content {
      transform: translateX(5px);
    }
  }
</style>