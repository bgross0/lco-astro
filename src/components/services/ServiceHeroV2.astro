---
export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  images: string[];
  ctaPrimary?: {
    text: string;
    href: string;
  };
  ctaSecondary?: {
    text: string;
    href: string;
  };
}

const {
  title,
  subtitle,
  description,
  images,
  ctaPrimary = { text: "Get Free Quote", href: "/contact" },
  ctaSecondary = { text: "Call 612-655-0648", href: "tel:6126550648" }
} = Astro.props;
---

<section class="hero">
  <div class="container">
    <div class="hero__content">
      <h1 class="hero__title">{title}</h1>

      {subtitle && (
        <h2 class="hero__subtitle">{subtitle}</h2>
      )}

      {description && (
        <p class="hero__description">{description}</p>
      )}

      <div class="hero__actions">
        <a href={ctaPrimary.href} class="hero__btn hero__btn--primary">
          {ctaPrimary.text}
        </a>
        <a href={ctaSecondary.href} class="hero__btn hero__btn--secondary">
          {ctaSecondary.text}
        </a>
      </div>
    </div>

    <div class="hero__image">
      <img
        src={images[0]}
        alt={title}
        loading="eager"
        fetchpriority="high"
      />
    </div>
  </div>
</section>

<style>
  .hero {
    position: relative;
    padding: var(--space-16) 0 var(--space-12) 0;
    min-height: 70vh;
    display: flex;
    align-items: center;
    background: linear-gradient(to bottom, #ffffff 0%, #f8f9fa 100%);
    overflow: hidden;
  }

  .container {
    width: 100%;
    max-width: var(--container-max);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-8);
    align-items: center;
  }

  .hero__content {
    text-align: center;
  }

  .hero__title {
    font-size: clamp(2rem, 5vw, 4rem);
    font-weight: 800;
    color: var(--neutral-dark);
    margin-bottom: var(--space-4);
    line-height: 1.1;
  }

  .hero__subtitle {
    font-size: clamp(1.25rem, 3vw, 2rem);
    font-weight: 600;
    color: var(--neutral);
    margin-bottom: var(--space-3);
  }

  .hero__description {
    font-size: clamp(1rem, 2.5vw, 1.25rem);
    color: var(--neutral);
    margin-bottom: var(--space-8);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .hero__actions {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    align-items: center;
  }

  .hero__btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-4) var(--space-8);
    border-radius: var(--radius-md);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    min-width: 200px;
  }

  .hero__btn--primary {
    background: var(--primary);
    color: white;
  }

  .hero__btn--primary:hover {
    background: var(--secondary);
    transform: translateY(-2px);
  }

  .hero__btn--secondary {
    background: transparent;
    color: var(--primary);
    border: 2px solid var(--primary);
  }

  .hero__btn--secondary:hover {
    background: var(--primary);
    color: white;
  }

  .hero__image {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  }

  .hero__image img {
    width: 100%;
    height: auto;
    display: block;
  }

  @media (min-width: 768px) {
    .container {
      grid-template-columns: 1fr 1fr;
      gap: var(--space-12);
    }

    .hero__content {
      text-align: left;
    }

    .hero__description {
      margin-left: 0;
      margin-right: 0;
    }

    .hero__actions {
      flex-direction: row;
      justify-content: flex-start;
    }

    .hero__btn {
      min-width: auto;
    }
  }
</style>
